{"Includes":[],"Defines":["const ()"],"TypeDefs":[],"Globals":["var ()"],"Structs":["type Point struct {\n\tX, Y float64\n}"],"Function Declarations":["",""],"Function Implementations":["func isInsideTriangle(a, b, c, p Point) bool {\n\treturn (c.X-p.X)*(a.Y-p.Y)-(a.X-p.X)*(c.Y-p.Y) \u003e= 0 \u0026\u0026\n\t\t(a.X-p.X)*(b.Y-p.Y)-(b.X-p.X)*(a.Y-p.Y) \u003e= 0 \u0026\u0026\n\t\t(b.X-p.X)*(c.Y-p.Y)-(c.X-p.X)*(b.Y-p.Y) \u003e= 0\n}","func areAllOutside(m, k Point, pIndex int, outer []Point) bool {\n\tallOutside := true\n\tfor i := range outer {\n\t\t// We have to skip M, K and P vertices. Since M is from the inner\n\t\t// polygon and K was proved to not match any vertex, the only one to\n\t\t// check is pIndex\n\t\tif i == pIndex {\n\t\t\tcontinue\n\t\t}\n\n\t\tif isInsideTriangle(m, k, outer[pIndex], outer[i]) {\n\t\t\tallOutside = false\n\t\t}\n\t}\n\treturn allOutside\n}"],"Enums":[]}
