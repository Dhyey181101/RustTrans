{"Includes":[],"Defines":["const ()"],"TypeDefs":[],"Globals":["var ()"],"Structs":["type Element struct {\n\tPrev, Next *Element\n\tPoint      Point\n}","type Point struct {\n\tX, Y float64\n}"],"Function Declarations":["","",""],"Function Implementations":["func isReflex(a, b, c Point) bool {\n\treturn (b.X-a.X)*(c.Y-b.Y)-(c.X-b.X)*(b.Y-a.Y) \u003c 0\n}","func isInsideTriangle(a, b, c, p Point) bool {\n\treturn (c.X-p.X)*(a.Y-p.Y)-(a.X-p.X)*(c.Y-p.Y) \u003e= 0 \u0026\u0026\n\t\t(a.X-p.X)*(b.Y-p.Y)-(b.X-p.X)*(a.Y-p.Y) \u003e= 0 \u0026\u0026\n\t\t(b.X-p.X)*(c.Y-p.Y)-(c.X-p.X)*(b.Y-p.Y) \u003e= 0\n}","func isEar(p *Element) bool {\n\ta, b, c := p.Prev.Point, p.Point, p.Next.Point\n\tif isReflex(a, b, c) {\n\t\treturn false\n\t}\n\n\tr := p.Next.Next\n\tfor r != p.Prev {\n\t\tinside := isInsideTriangle(a, b, c, r.Point)\n\t\treflex := isReflex(r.Prev.Point, r.Point, r.Next.Point)\n\t\tif inside \u0026\u0026 reflex {\n\t\t\treturn false\n\t\t}\n\t\tr = r.Next\n\t}\n\treturn true\n}"],"Enums":[]}
