{"Includes":["import (\n\t\"strconv\"\n\t\"strings\"\n)"],"Defines":["const ()"],"TypeDefs":[],"Globals":["var (\n\tmoov_io_ach_stringZeros map[int]string = moov_io_ach_populateMap(94, \"0\")\n)"],"Structs":["type moov_io_ach_IATBatchHeader struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// ServiceClassCode ACH Mixed Debits and Credits '200'\n\t// ACH Credits Only '220'\n\t// ACH Debits Only '225'\n\n\t// IATIndicator - Leave Blank - It is only used for corrected IAT entries\n\n\t// ForeignExchangeIndicator is a code indicating currency conversion\n\t//\n\t// FV Fixed-to-Variable – Entry is originated in a fixed-value amount\n\t// and is to be received in a variable amount resulting from the\n\t// execution of the foreign exchange conversion.\n\t//\n\t// VF Variable-to-Fixed – Entry is originated in a variable-value\n\t// amount based on a specific foreign exchange rate for conversion to a\n\t// fixed-value amount in which the entry is to be received.\n\t//\n\t// FF Fixed-to-Fixed – Entry is originated in a fixed-value amount and\n\t// is to be received in the same fixed-value amount in the same\n\t// currency denomination. There is no foreign exchange conversion for\n\t// entries transmitted using this code. For entries originated in a fixed value\n\t// amount, the foreign Exchange Reference Field will be space\n\t// filled.\n\n\t// ForeignExchangeReferenceIndicator is a code used to indicate the content of the\n\t// Foreign Exchange Reference Field and is filled by the gateway operator.\n\t// Valid entries are:\n\t// 1 - Foreign Exchange Rate;\n\t// 2 - Foreign Exchange Reference Number; or\n\t// 3 - Space Filled\n\tForeignExchangeReferenceIndicator int `json:\"foreignExchangeReferenceIndicator\"`\n\n\t// ForeignExchangeReference  Contains either the foreign exchange rate used to execute\n\t// the foreign exchange conversion of a cross-border entry or another reference to the foreign\n\t// exchange transaction.\n\n\t// ISODestinationCountryCode is the two-character code, as approved by the International\n\t// Organization for Standardization (ISO), to identify the country in which the entry is\n\t// to be received. Values can be found on the International Organization for Standardization\n\t// website: www.iso.org.  For entries destined to account holder in the U.S., this would be US.\n\n\t// OriginatorIdentification identifies the following:\n\t// For U.S. entities: the number assigned will be your tax ID\n\t// For non-U.S. entities: the number assigned will be your DDA number,\n\t// or the last 9 characters of your account number if it exceeds 9 characters\n\n\t// StandardEntryClassCode for consumer and non consumer international payments is IAT\n\t// Identifies the payment type (product) found within an ACH batch-using a 3-character code.\n\t// The SEC Code pertains to all items within batch.\n\t// Determines format of the detail records.\n\t// Determines addenda records (required or optional PLUS one or up to 9,999 records).\n\t// Determines rules to follow (return time frames).\n\t// Some SEC codes require specific data in predetermined fields within the ACH record\n\n\t// CompanyEntryDescription A description of the entries contained in the batch\n\t//\n\t//The Originator establishes the value of this field to provide a\n\t// description of the purpose of the entry to be displayed back to\n\t// the receive For example, \"GAS BILL,\" \"REG. SALARY,\" \"INS. PREM,\"\n\t// \"SOC. SEC.,\" \"DTC,\" \"TRADE PAY,\" \"PURCHASE,\" etc.\n\t//\n\t// This field must contain the word \"REVERSAL\" (left justified) when the\n\t// batch contains reversing entries.\n\t//\n\t// This field must contain the word \"RECLAIM\" (left justified) when the\n\t// batch contains reclamation entries.\n\t//\n\t// This field must contain the word \"NONSETTLED\" (left justified) when the\n\t// batch contains entries which could not settle.\n\n\t// ISOOriginatingCurrencyCode is the three-character code, as approved by the International\n\t// Organization for Standardization (ISO), to identify the currency denomination in which the\n\t// entry was first originated. If the source of funds is within the territorial jurisdiction\n\t// of the U.S., enter 'USD', otherwise refer to International Organization for Standardization\n\t// website for value: www.iso.org -- (Account Currency)\n\n\t// ISODestinationCurrencyCode is the three-character code, as approved by the International\n\t// Organization for Standardization (ISO), to identify the currency denomination in which the\n\t// entry will ultimately be settled. If the final destination of funds is within the territorial\n\t// jurisdiction of the U.S., enter “USD”, otherwise refer to International Organization for\n\t// Standardization website for value: www.iso.org -- (Payment Currency)\n\n\t// EffectiveEntryDate the date on which the entries are to settle. Format: YYMMDD (Y=Year, M=Month, D=Day)\n\n\t// SettlementDate Leave blank, this field is inserted by the ACH operator\n\n\t// OriginatorStatusCode refers to the ODFI initiating the Entry.\n\t// 0 ADV File prepared by an ACH Operator.\n\t// 1 This code identifies the Originator as a depository financial institution.\n\t// 2 This code identifies the Originator as a Federal Government entity or agency.\n\n\t// ODFIIdentification First 8 digits of the originating DFI transit routing number\n\t// For Inbound IAT Entries, this field contains the routing number of the U.S. Gateway\n\t// Operator.  For Outbound IAT Entries, this field contains the standard routing number,\n\t// as assigned by Accuity, that identifies the U.S. ODFI initiating the Entry.\n\t// Format - TTTTAAAA\n\n\t// BatchNumber is assigned in ascending sequence to each batch by the ODFI\n\t// or its Sending Point in a given file of entries. Since the batch number\n\t// in the Batch Header Record and the Batch Control Record is the same,\n\t// the ascending sequence number should be assigned by batch and not by\n\t// record.\n\n\t// validator is composed for data validation\n\n\t// converters is composed for ACH to golang Converters\n\tmoov_io_ach_converters\n}","type moov_io_ach_converters struct{}"],"Function Declarations":["","",""],"Function Implementations":["func (c *moov_io_ach_converters) numericField(n int, max uint) string {\n\ts := strconv.FormatInt(int64(n), 10)\n\tif l := uint(len(s)); l \u003e max {\n\t\treturn s[l-max:]\n\t} else {\n\t\tm := int(max - l)\n\t\tpad, exists := moov_io_ach_stringZeros[m]\n\t\tif exists {\n\t\t\treturn pad + s\n\t\t}\n\t\t// slow path\n\t\treturn strings.Repeat(\"0\", m) + s\n\t}\n}","func (iatBh *moov_io_ach_IATBatchHeader) ForeignExchangeReferenceIndicatorField() string {\n\treturn iatBh.numericField(iatBh.ForeignExchangeReferenceIndicator, 1)\n}","func moov_io_ach_populateMap(max int, zero string) map[int]string {\n\tout := make(map[int]string, max)\n\tfor i := 0; i \u003c max; i++ {\n\t\tout[i] = strings.Repeat(zero, i)\n\t}\n\treturn out\n}"],"Enums":[]}
