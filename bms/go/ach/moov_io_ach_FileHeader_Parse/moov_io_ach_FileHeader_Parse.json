{"Includes":["import (\n\t\"regexp\"\n\t\"strings\"\n\t\"time\"\n\t\"unicode/utf8\"\n)"],"Defines":["const (\n\tmoov_io_ach_RecordLength                      = 94\n\tmoov_io_ach_CheckingPrenoteCredit             = 23\n\tmoov_io_ach_CheckingZeroDollarRemittanceDebit = 29\n\tmoov_io_ach_correctedDataCharLength           = 29\n\tmoov_io_ach_SavingsPrenoteCredit              = 33\n\tmoov_io_ach_SavingsZeroDollarRemittanceCredit = 34\n\tmoov_io_ach_fileHeaderPos                     = \"1\"\n\tmoov_io_ach_DebitForDebitsRejectedBatches     = 86\n\tmoov_io_ach_GLPrenoteDebit                    = 48\n)"],"TypeDefs":[],"Globals":["var (\n\tmoov_io_ach_hhmmRegex = regexp.MustCompile(`^([0-2]{1}[\\d]{1}[0-5]{1}\\d{1})$`)\n)"],"Structs":["type moov_io_ach_FileHeader struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// PriorityCode consists of the numerals 01\n\tpriorityCode string\n\n\t// ImmediateDestination contains the Routing Number of the ACH Operator or receiving\n\t// point to which the file is being sent. The ach file format specifies a 10 character\n\t// field begins with a blank space in the first position, followed by the four digit\n\t// Federal Reserve Routing Symbol, the four digit ABA Institution Identifier, and the Check\n\t// Digit (bTTTTAAAAC). ImmediateDestinationField will append the blank space to the\n\t// routing number.\n\tImmediateDestination string `json:\"immediateDestination\"`\n\n\t// ImmediateOrigin contains the Routing Number of the ACH Operator or sending\n\t// point that is sending the file. The ach file format specifies a 10 character\n\t// field begins with a blank space in the first position, followed by the four digit\n\t// Federal Reserve Routing Symbol, the four digit ABA Institution Identifier, and the Check\n\t// Digit (bTTTTAAAAC). ImmediateOriginField will append the blank space to the\n\t// routing number.\n\tImmediateOrigin string `json:\"immediateOrigin\"`\n\n\t// FileCreationDate is the date on which the file is prepared by an ODFI (ACH input files)\n\t// or the date (exchange date) on which a file is transmitted from ACH Operator\n\t// to ACH Operator, or from ACH Operator to RDFIs (ACH output files).\n\t//\n\t// The format is: YYMMDD. Y=Year, M=Month, D=Day\n\tFileCreationDate string `json:\"fileCreationDate\"`\n\n\t// FileCreationTime is the system time when the ACH file was created.\n\t//\n\t// The format is: HHmm. H=Hour, m=Minute\n\tFileCreationTime string `json:\"fileCreationTime\"`\n\n\t// This field should start at zero and increment by 1 (up to 9) and then go to\n\t// letters starting at A through Z for each subsequent file that is created for\n\t// a single system date. (34-34) 1 numeric 0-9 or uppercase alpha A-Z.\n\t// I have yet to see this ID not A\n\tFileIDModifier string `json:\"fileIDModifier,omitempty\"`\n\n\t// RecordSize indicates the number of characters contained in each\n\t// record. At this time, the value \"094\" must be used.\n\trecordSize string\n\n\t// BlockingFactor defines the number of physical records within a block\n\t// (a block is 940 characters). For all files moving between a DFI and an ACH\n\t// Operator (either way), the value \"10\" must be used. If the number of records\n\t// within the file is not a multiple of ten, the remainder of the block must\n\t// be nine-filled.\n\tblockingFactor string\n\n\t// FormatCode a code to allow for future format variations. As\n\t// currently defined, this field will contain a value of \"1\".\n\tformatCode string\n\n\t// ImmediateDestinationName us the name of the ACH or receiving point for which that\n\t// file is destined. Name corresponding to the ImmediateDestination\n\tImmediateDestinationName string `json:\"immediateDestinationName\"`\n\n\t// ImmediateOriginName is the name of the ACH operator or sending point that is\n\t// sending the file. Name corresponding to the ImmediateOrigin\n\tImmediateOriginName string `json:\"immediateOriginName\"`\n\n\t// ReferenceCode is reserved for information pertinent to the Originator.\n\tReferenceCode string `json:\"referenceCode,omitempty\"`\n\t// validator is composed for data validation\n\tmoov_io_ach_validator\n\t// converters is composed for ACH to GoLang Converters\n\tmoov_io_ach_converters\n\n\tvalidateOpts *moov_io_ach_ValidateOpts\n}","type moov_io_ach_converters struct{}","type moov_io_ach_validator struct{}","type moov_io_ach_ValidateOpts struct {\n\t// SkipAll will disable all validation checks of a File. It has no effect when set on records.\n\n\t// RequireABAOrigin can be set to enable routing number validation\n\t// over the ImmediateOrigin file header field.\n\n\t// BypassOriginValidation can be set to skip validation for the\n\t// ImmediateOrigin file header field.\n\t//\n\t// This also allows for custom TraceNumbers which aren't prefixed with\n\t// a routing number as required by the NACHA specification.\n\n\t// BypassDestinationValidation can be set to skip validation for the\n\t// ImmediateDestination file header field.\n\t//\n\t// This also allows for custom TraceNumbers which aren't prefixed with\n\t// a routing number as required by the NACHA specification.\n\n\t// CheckTransactionCode allows for custom validation of TransactionCode values\n\t//\n\t// Note: Functions cannot be serialized into/from JSON, so this check cannot be used from config files.\n\n\t// CustomTraceNumbers disables Nacha specified checks of TraceNumbers:\n\t// - Ascending order of trace numbers within batches\n\t// - Trace numbers beginning with their ODFI's routing number\n\t// - AddendaRecordIndicator is set correctly\n\n\t// AllowZeroBatches allows the file to have zero batches\n\n\t// AllowMissingFileHeader allows a file to be read without a FileHeader record.\n\n\t// AllowMissingFileControl allows a file to be read without a FileControl record.\n\n\t// BypassCompanyIdentificationMatch allows batches in which the Company Identification field\n\t// in the batch header and control do not match.\n\n\t// CustomReturnCodes can be set to skip validation for the Return Code field in an Addenda99\n\t// This allows for non-standard/deprecated return codes (e.g. R97)\n\n\t// UnequalServiceClassCode skips equality checks for the ServiceClassCode in each pair of BatchHeader\n\t// and BatchControl records.\n\n\t// AllowUnorderedBatchNumebrs allows a file to be read with unordered batch numbers.\n\n\t// AllowInvalidCheckDigit allows the CheckDigit field in EntryDetail to differ from\n\t// the expected calculation\n\n\t// UnequalAddendaCounts skips checking that Addenda Count fields match their expected and computed values.\n\n\t// PreserveSpaces keeps the spacing before and after values that normally have spaces trimmed during parsing.\n\tPreserveSpaces bool `json:\"preserveSpaces\"`\n\n\t// AllowInvalidAmounts will skip verifying the Amount is valid for the TransactionCode and entry type.\n\n}"],"Function Declarations":["","","","","",""],"Function Implementations":["func (v *moov_io_ach_validator) validateSimpleTime(s string) string {\n\tif moov_io_ach_hhmmRegex.MatchString(s) {\n\t\treturn s // successfully matched and validated\n\t}\n\treturn \"\"\n}","func (c *moov_io_ach_converters) parseStringField(r string) (s string) {\n\ts = strings.TrimSpace(r)\n\treturn s\n}","func (c *moov_io_ach_converters) parseStringFieldWithOpts(r string, opts *moov_io_ach_ValidateOpts) string {\n\tif opts != nil \u0026\u0026 opts.PreserveSpaces {\n\t\treturn r\n\t} else {\n\t\treturn c.parseStringField(r)\n\t}\n}","func (v *moov_io_ach_validator) validateSimpleDate(s string) string {\n\t_, err := time.Parse(\"060102\", s) // YYMMDD\n\tif err != nil {\n\t\treturn \"\"\n\t}\n\treturn s\n}","func moov_io_ach_trimRoutingNumberLeadingZero(s string) string {\n\tif utf8.RuneCountInString(s) == 10 \u0026\u0026 s[0] == '0' \u0026\u0026 s != \"0000000000\" {\n\t\t// trim off a leading 0 as ImmediateOriginField or ImmediateDestinationField will pad it back\n\t\treturn strings.TrimSpace(s[1:])\n\t}\n\treturn strings.TrimSpace(s)\n}","func (fh *moov_io_ach_FileHeader) Parse(record string) {\n\tif utf8.RuneCountInString(record) != 94 {\n\t\treturn\n\t}\n\trunes := []rune(record)\n\n\t// (character position 1-1) Always \"1\"\n\t// (2-3) Always \"01\"\n\tfh.priorityCode = \"01\"\n\t// (4-13) A blank space followed by your ODFI's routing number. For example: \" 121140399\"\n\tfh.ImmediateDestination = moov_io_ach_trimRoutingNumberLeadingZero(fh.parseStringField(string(runes[3:13])))\n\t// (14-23) A 10-digit number assigned to you by the ODFI once they approve you to originate ACH files through them\n\tfh.ImmediateOrigin = moov_io_ach_trimRoutingNumberLeadingZero(fh.parseStringField(string(runes[13:23])))\n\t// 24-29 Today's date in YYMMDD format\n\t// must be after today's date.\n\tfh.FileCreationDate = fh.validateSimpleDate(string(runes[23:29]))\n\t// 30-33 The current time in HHmm format\n\tfh.FileCreationTime = fh.validateSimpleTime(string(runes[29:33]))\n\t// 35-37 Always \"A\"\n\tfh.FileIDModifier = string(runes[33:34])\n\t// 35-37 always \"094\"\n\tfh.recordSize = \"094\"\n\t// 38-39 always \"10\"\n\tfh.blockingFactor = \"10\"\n\t// 40 always \"1\"\n\tfh.formatCode = \"1\"\n\t// 41-63 The name of the ODFI. example \"SILICON VALLEY BANK    \"\n\tfh.ImmediateDestinationName = fh.parseStringFieldWithOpts(string(runes[40:63]), fh.validateOpts)\n\t// 64-86 ACH operator or sending point that is sending the file\n\tfh.ImmediateOriginName = fh.parseStringFieldWithOpts(string(runes[63:86]), fh.validateOpts)\n\t// 87-94 Optional field that may be used to describe the ACH file for internal accounting purposes\n\tfh.ReferenceCode = fh.parseStringFieldWithOpts(string(runes[86:94]), fh.validateOpts)\n}"],"Enums":[]}
