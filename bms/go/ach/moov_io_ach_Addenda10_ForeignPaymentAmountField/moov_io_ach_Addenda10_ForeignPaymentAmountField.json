{"Includes":["import (\n\t\"strconv\"\n\t\"strings\"\n)"],"Defines":["const ()"],"TypeDefs":[],"Globals":["var (\n\tmoov_io_ach_stringZeros map[int]string = moov_io_ach_populateMap(94, \"0\")\n)"],"Structs":["type moov_io_ach_Addenda10 struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// TypeCode Addenda10 types code '10'\n\n\t// Transaction Type Code Describes the type of payment:\n\t// ANN = Annuity, BUS = Business/Commercial, DEP = Deposit, LOA = Loan, MIS = Miscellaneous, MOR = Mortgage\n\t// PEN = Pension, RLS = Rent/Lease, REM = Remittance2, SAL = Salary/Payroll, TAX = Tax, TEL = Telephone-Initiated Transaction\n\t// WEB = Internet-Initiated Transaction, ARC = Accounts Receivable Entry, BOC = Back Office Conversion Entry,\n\t// POP = Point of Purchase Entry, RCK = Re-presented Check Entry\n\n\t// Foreign Payment Amount $$$$$$$$$$$$$$$$¢¢\n\t// For inbound IAT payments this field should contain the USD amount or may be blank.\n\tForeignPaymentAmount int `json:\"foreignPaymentAmount\"`\n\t// Foreign Trace Number\n\n\t// Receiving Company Name/Individual Name\n\n\t// EntryDetailSequenceNumber contains the ascending sequence number section of the Entry\n\t// Detail or Corporate Entry Detail Record's trace number This number is\n\t// the same as the last seven digits of the trace number of the related\n\t// Entry Detail Record or Corporate Entry Detail Record.\n\n\t// validator is composed for data validation\n\n\t// converters is composed for ACH to GoLang Converters\n\tmoov_io_ach_converters\n}","type moov_io_ach_converters struct{}"],"Function Declarations":["","",""],"Function Implementations":["func moov_io_ach_populateMap(max int, zero string) map[int]string {\n\tout := make(map[int]string, max)\n\tfor i := 0; i \u003c max; i++ {\n\t\tout[i] = strings.Repeat(zero, i)\n\t}\n\treturn out\n}","func (c *moov_io_ach_converters) numericField(n int, max uint) string {\n\ts := strconv.FormatInt(int64(n), 10)\n\tif l := uint(len(s)); l \u003e max {\n\t\treturn s[l-max:]\n\t} else {\n\t\tm := int(max - l)\n\t\tpad, exists := moov_io_ach_stringZeros[m]\n\t\tif exists {\n\t\t\treturn pad + s\n\t\t}\n\t\t// slow path\n\t\treturn strings.Repeat(\"0\", m) + s\n\t}\n}","func (addenda10 *moov_io_ach_Addenda10) ForeignPaymentAmountField() string {\n\treturn addenda10.numericField(addenda10.ForeignPaymentAmount, 18)\n}"],"Enums":[]}
