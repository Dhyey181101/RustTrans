{"Includes":["import (\n\t\"math\"\n\t\"strconv\"\n\t\"unicode/utf8\"\n)"],"Defines":["const (\n\tmoov_io_ach_ADV                         = \"moov_io_ach_ADV\"\n\tmoov_io_ach_GLPrenoteDebit              = 48\n\tmoov_io_ach_GLZeroDollarRemittanceDebit = 49\n)"],"TypeDefs":[],"Globals":["var ()"],"Structs":["type moov_io_ach_Batch struct {\n\t// id is a client defined string used as a reference to this record. accessed via ID/SetID\n\n\tHeader  *moov_io_ach_BatchHeader   `json:\"batchHeader\"`\n\tEntries []*moov_io_ach_EntryDetail `json:\"entryDetails\"`\n\n\tADVEntries []*moov_io_ach_ADVEntryDetail `json:\"advEntryDetails,omitempty\"`\n\n\t// offset holds the information to build an EntryDetail record which\n\t// balances the batch by debiting or crediting the sum of amounts in the batch.\n\n\t// category defines if the entry is a Forward, Return, or NOC\n\n\t// Converters is composed for ACH to GoLang Converters\n\tmoov_io_ach_converters\n}","type moov_io_ach_EntryDetail struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// TransactionCode if the receivers account is checking, savings, general ledger (GL) or loan.\n\n\t// RDFIIdentification is the RDFI's routing number without the last digit.\n\t// Receiving Depository Financial Institution\n\tRDFIIdentification string `json:\"RDFIIdentification\"`\n\t// CheckDigit the last digit of the RDFI's routing number\n\n\t// DFIAccountNumber is the receiver's bank account number you are crediting/debiting.\n\t// It important to note that this is an alphanumeric field, so its space padded, no zero padded\n\n\t// Amount Number of cents you are debiting/crediting this account\n\n\t// IdentificationNumber an internal identification (alphanumeric) that\n\t// you use to uniquely identify this Entry Detail Record\n\n\t// IndividualName The name of the receiver, usually the name on the bank account\n\n\t// DiscretionaryData allows ODFIs to include codes, of significance only to them,\n\t// to enable specialized handling of the entry. There will be no\n\t// standardized interpretation for the value of this field. It can either\n\t// be a single two-character code, or two distinct one-character codes,\n\t// according to the needs of the ODFI and/or Originator involved. This\n\t// field must be returned intact for any returned entry.\n\t//\n\t// WEB and TEL batches use the Discretionary Data Field as the Payment Type Code\n\n\t// AddendaRecordIndicator indicates the existence of an Addenda Record.\n\t// A value of \"1\" indicates that one ore more addenda records follow,\n\t// and \"0\" means no such record is present.\n\n\t// TraceNumber is assigned by the ODFI or software vendor and used as part of identification.\n\t//\n\t// The format of trace numbers is the first 8 digits of the ODFI's routing number followed by\n\t// 7 digits chosen by the ODFI or software vendor.\n\t//\n\t// Sequentual or random numbers can be chosen. The only requirement of Nacha is unique trace\n\t// numbers within a batch and file.\n\t//\n\t// Trace Numbers are included in each Entry Detail Record, Corporate Entry Detail Record,\n\t// and addenda Record.\n\t//\n\t// In association with the Batch Number, transmission (File Creation) Date,\n\t// and File ID Modifier, the Trace Number uniquely identifies an entry within a given file.\n\t//\n\t// For addenda Records, the Trace Number will be identical to the Trace Number\n\t// in the associated Entry Detail Record, since the Trace Number is associated\n\t// with an entry or item rather than a physical record.\n\t//\n\t// Use TraceNumberField for a properly formatted string representation.\n\n\t// Addenda02 for use with StandardEntryClassCode MTE, POS, and SHR\n\n\t// Addenda05 for use with StandardEntryClassCode: ACK, ATX, CCD, CIE, CTX, DNE, ENR, WEB, PPD, TRX.\n\n\t// Addenda98 for user with Notification of Change\n\n\t// Addenda98 for user with Refused Notification of Change\n\n\t// Addenda99 for use with Returns\n\n\t// Addenda99Contested for use with Contested Dishonored Returns\n\n\t// Addenda99Dishonored for use with Dishonored Returns\n\n\t// Category defines if the entry is a Forward, Return, or NOC\n\n\t// validator is composed for data validation\n\n\t// converters is composed for ACH to golang Converters\n\tmoov_io_ach_converters\n}","type moov_io_ach_converters struct{}","type moov_io_ach_ADVEntryDetail struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// TransactionCode representing Accounting Entries\n\t// Credit for ACH debits originated - 81\n\t// Debit for ACH credits originated - 82\n\t// Credit for ACH credits received 83\n\t// Debit for ACH debits received 84\n\t// Credit for ACH credits in rejected batches 85\n\t// Debit for ACH debits in rejected batches - 86\n\t// Summary credit for respondent ACH activity - 87\n\t// Summary debit for respondent ACH activity - 88\n\n\t// RDFIIdentification is the RDFI's routing number without the last digit.\n\t// Receiving Depository Financial Institution\n\tRDFIIdentification string `json:\"RDFIIdentification\"`\n\t// CheckDigit the last digit of the RDFI's routing number\n\n\t// DFIAccountNumber is the receiver's bank account number you are crediting/debiting.\n\t// It important to note that this is an alphanumeric field, so its space padded, no zero padded\n\n\t// Amount Number of cents you are debiting/crediting this account\n\n\t// AdviceRoutingNumber\n\n\t// FileIdentification\n\n\t// ACHOperatorData\n\n\t// IndividualName The name of the receiver, usually the name on the bank account\n\n\t// DiscretionaryData allows ODFIs to include codes, of significance only to them,\n\t// to enable specialized handling of the entry. There will be no\n\t// standardized interpretation for the value of this field. It can either\n\t// be a single two-character code, or two distinct one-character codes,\n\t// according to the needs of the ODFI and/or Originator involved. This\n\t// field must be returned intact for any returned entry.\n\n\t// AddendaRecordIndicator indicates the existence of an Addenda Record.\n\t// A value of \"1\" indicates that one ore more addenda records follow,\n\t// and \"0\" means no such record is present.\n\n\t// ACHOperatorRoutingNumber\n\n\t// JulianDay\n\n\t// SequenceNumber\n\n\t// Addenda99 for use with Returns\n\n\t// Category defines if the entry is a Forward, Return, or NOC\n\n\t// validator is composed for data validation\n\n\t// converters is composed for ACH to golang Converters\n\tmoov_io_ach_converters\n}","type moov_io_ach_BatchHeader struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// ServiceClassCode ACH Mixed Debits and Credits '200'\n\t// ACH Credits Only '220'\n\t// ACH Debits Only '225'\n\n\t// CompanyName the company originating the entries in the batch\n\n\t// CompanyDiscretionaryData allows Originators and/or ODFIs to include codes (one or more),\n\t// of significance only to them, to enable specialized handling of all\n\t// subsequent entries in that batch. There will be no standardized\n\t// interpretation for the value of the field. This field must be returned\n\t// intact on any return entry.\n\n\t// CompanyIdentification The 9 digit FEIN number (proceeded by a predetermined\n\t// alpha or numeric character) of the entity in the company name field\n\n\t// StandardEntryClassCode\n\t// Identifies the payment type (product) found within an ACH batch-using a 3-character code.\n\t// The SEC Code pertains to all items within batch.\n\t// Determines format of the detail records.\n\t// Determines addenda records (required or optional PLUS one or up to 9,999 records).\n\t// Determines rules to follow (return time frames).\n\t// Some SEC codes require specific data in predetermined fields within the ACH record\n\tStandardEntryClassCode string `json:\"standardEntryClassCode\"`\n\n\t// CompanyEntryDescription A description of the entries contained in the batch\n\t//\n\t//The Originator establishes the value of this field to provide a\n\t// description of the purpose of the entry to be displayed back to\n\t// the receive For example, \"GAS BILL,\" \"REG. SALARY,\" \"INS. PREM,\"\n\t// \"SOC. SEC.,\" \"DTC,\" \"TRADE PAY,\" \"PURCHASE,\" etc.\n\t//\n\t// This field must contain the word \"REVERSAL\" (left justified) when the\n\t// batch contains reversing entries.\n\t//\n\t// This field must contain the word \"RECLAIM\" (left justified) when the\n\t// batch contains reclamation entries.\n\t//\n\t// This field must contain the word \"NONSETTLED\" (left justified) when the\n\t// batch contains entries which could not settle.\n\n\t// CompanyDescriptiveDate currently, the Rules provide that the “Originator establishes this field as the date it\n\t// would like to see displayed to the Receiver for descriptive purposes.” NACHA recommends that, as desired,\n\t// the content of this field be formatted using the convention “SDHHMM”, where the “SD” in positions 64- 65 denotes\n\t// the intent for same-day settlement, and the hours and minutes in positions 66-69 denote the desired settlement\n\t// time using a 24-hour clock. When electing to use this convention, the ODFI would validate that the field\n\t// contains either.\n\t//\n\t// ODFIs at their discretion may require their Originators to further show intent for\n\t// same-day settlement using an optional, yet standardized, same-day indicator in the Company Descriptive Date\n\t// field. The Company Descriptive Date field (5 record, field 8) is an optional field with 6 positions available\n\t// (positions 64-69).\n\n\t// EffectiveEntryDate the date on which the entries are to settle. Format: YYMMDD (Y=Year, M=Month, D=Day)\n\n\t// SettlementDate Leave blank, this field is inserted by the ACH operator\n\n\t// OriginatorStatusCode refers to the ODFI initiating the Entry.\n\t// 0 ADV File prepared by an ACH Operator.\n\t// 1 This code identifies the Originator as a depository financial institution.\n\t// 2 This code identifies the Originator as a Federal Government entity or agency.\n\n\t//ODFIIdentification First 8 digits of the originating DFI transit routing number\n\n\t// BatchNumber is assigned in ascending sequence to each batch by the ODFI\n\t// or its Sending Point in a given file of entries. Since the batch number\n\t// in the Batch Header Record and the Batch Control Record is the same,\n\t// the ascending sequence number should be assigned by batch and not by\n\t// record.\n\n\t// validator is composed for data validation\n\n\t// converters is composed for ACH to golang Converters\n\tmoov_io_ach_converters\n}"],"Function Declarations":["","","","",""],"Function Implementations":["func moov_io_ach_aba8(rtn string) string {\n\tn := utf8.RuneCountInString(rtn)\n\tswitch {\n\tcase n \u003e 10:\n\t\treturn \"\"\n\tcase n == 10:\n\t\tif rtn[0] == '0' || rtn[0] == '1' {\n\t\t\treturn rtn[1:9] // ACH server will prefix with space, 0, or 1\n\t\t}\n\t\treturn \"\"\n\tcase n != 8 \u0026\u0026 n != 9:\n\t\treturn \"\"\n\tdefault:\n\t\treturn rtn[:8]\n\t}\n}","func (batch *moov_io_ach_Batch) GetHeader() *moov_io_ach_BatchHeader {\n\treturn batch.Header\n}","func (batch *moov_io_ach_Batch) IsADV() bool {\n\tok := batch.GetHeader().StandardEntryClassCode == moov_io_ach_ADV\n\treturn ok\n}","func (c *moov_io_ach_converters) leastSignificantDigits(v int, maxDigits uint) int {\n\treturn v % int(math.Pow10(int(maxDigits)))\n}","func (batch *moov_io_ach_Batch) calculateEntryHash() int {\n\thash := 0\n\n\tif !batch.IsADV() {\n\t\tfor _, entry := range batch.Entries {\n\t\t\tentryRDFI, _ := strconv.Atoi(moov_io_ach_aba8(entry.RDFIIdentification))\n\t\t\thash += entryRDFI\n\t\t}\n\t} else {\n\t\tfor _, entry := range batch.ADVEntries {\n\t\t\tentryRDFI, _ := strconv.Atoi(moov_io_ach_aba8(entry.RDFIIdentification))\n\t\t\thash += entryRDFI\n\t\t}\n\t}\n\n\t// EntryHash is essentially the sum of all the RDFI routing numbers in the batch. If the sum exceeds 10 digits\n\t// (because you have lots of Entry Detail Records), lop off the most significant digits of the sum until there\n\t// are only 10.\n\treturn batch.leastSignificantDigits(hash, 10)\n}"],"Enums":[]}
