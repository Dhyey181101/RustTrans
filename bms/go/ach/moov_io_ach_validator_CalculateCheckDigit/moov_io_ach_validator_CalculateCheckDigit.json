{"Includes":["import (\n\t\"math\"\n\t\"unicode/utf8\"\n)"],"Defines":["const (\n\tmoov_io_ach_GLPrenoteDebit = 48\n)"],"TypeDefs":[],"Globals":["var ()","var sum int","var n int32 = (r - '0')"],"Structs":["type moov_io_ach_validator struct{}"],"Function Declarations":["","",""],"Function Implementations":["func moov_io_ach_roundUp10(n int) int {\n\treturn int(math.Ceil(float64(n)/10.0)) * 10\n}","func moov_io_ach_CalculateCheckDigit(routingNumber string) int {\n\tif n := utf8.RuneCountInString(routingNumber); n != 8 \u0026\u0026 n != 9 {\n\t\treturn -1\n\t}\n\n\tvar sum int\n\tfor i, r := range routingNumber {\n\t\t// Don't process check digit of routing number\n\t\tif i \u003e= 8 {\n\t\t\tbreak\n\t\t}\n\n\t\t// Reject anything that's not a digit\n\t\tif r \u003c '0' || r \u003e '9' {\n\t\t\treturn -1 // only digits are allowed\n\t\t}\n\n\t\t// Calculate the check digit\n\t\tvar n int32 = (r - '0')\n\n\t\tswitch i {\n\t\tcase 0, 3, 6:\n\t\t\tsum += int(n * 3)\n\t\tcase 1, 4, 7:\n\t\t\tsum += int(n * 7)\n\t\tcase 2, 5:\n\t\t\tsum += int(n)\n\t\t}\n\t}\n\n\treturn moov_io_ach_roundUp10(sum) - sum\n}","func (v *moov_io_ach_validator) CalculateCheckDigit(routingNumber string) int {\n\treturn moov_io_ach_CalculateCheckDigit(routingNumber)\n}"],"Enums":[]}
