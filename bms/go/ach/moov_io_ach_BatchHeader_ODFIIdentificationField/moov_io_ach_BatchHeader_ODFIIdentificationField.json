{"Includes":["import (\n\t\"strings\"\n\t\"unicode/utf8\"\n)"],"Defines":["const ()"],"TypeDefs":[],"Globals":["var (\n\tmoov_io_ach_stringZeros map[int]string = moov_io_ach_populateMap(94, \"0\")\n)"],"Structs":["type moov_io_ach_BatchHeader struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// ServiceClassCode ACH Mixed Debits and Credits '200'\n\t// ACH Credits Only '220'\n\t// ACH Debits Only '225'\n\n\t// CompanyName the company originating the entries in the batch\n\n\t// CompanyDiscretionaryData allows Originators and/or ODFIs to include codes (one or more),\n\t// of significance only to them, to enable specialized handling of all\n\t// subsequent entries in that batch. There will be no standardized\n\t// interpretation for the value of the field. This field must be returned\n\t// intact on any return entry.\n\n\t// CompanyIdentification The 9 digit FEIN number (proceeded by a predetermined\n\t// alpha or numeric character) of the entity in the company name field\n\n\t// StandardEntryClassCode\n\t// Identifies the payment type (product) found within an ACH batch-using a 3-character code.\n\t// The SEC Code pertains to all items within batch.\n\t// Determines format of the detail records.\n\t// Determines addenda records (required or optional PLUS one or up to 9,999 records).\n\t// Determines rules to follow (return time frames).\n\t// Some SEC codes require specific data in predetermined fields within the ACH record\n\n\t// CompanyEntryDescription A description of the entries contained in the batch\n\t//\n\t//The Originator establishes the value of this field to provide a\n\t// description of the purpose of the entry to be displayed back to\n\t// the receive For example, \"GAS BILL,\" \"REG. SALARY,\" \"INS. PREM,\"\n\t// \"SOC. SEC.,\" \"DTC,\" \"TRADE PAY,\" \"PURCHASE,\" etc.\n\t//\n\t// This field must contain the word \"REVERSAL\" (left justified) when the\n\t// batch contains reversing entries.\n\t//\n\t// This field must contain the word \"RECLAIM\" (left justified) when the\n\t// batch contains reclamation entries.\n\t//\n\t// This field must contain the word \"NONSETTLED\" (left justified) when the\n\t// batch contains entries which could not settle.\n\n\t// CompanyDescriptiveDate currently, the Rules provide that the “Originator establishes this field as the date it\n\t// would like to see displayed to the Receiver for descriptive purposes.” NACHA recommends that, as desired,\n\t// the content of this field be formatted using the convention “SDHHMM”, where the “SD” in positions 64- 65 denotes\n\t// the intent for same-day settlement, and the hours and minutes in positions 66-69 denote the desired settlement\n\t// time using a 24-hour clock. When electing to use this convention, the ODFI would validate that the field\n\t// contains either.\n\t//\n\t// ODFIs at their discretion may require their Originators to further show intent for\n\t// same-day settlement using an optional, yet standardized, same-day indicator in the Company Descriptive Date\n\t// field. The Company Descriptive Date field (5 record, field 8) is an optional field with 6 positions available\n\t// (positions 64-69).\n\n\t// EffectiveEntryDate the date on which the entries are to settle. Format: YYMMDD (Y=Year, M=Month, D=Day)\n\n\t// SettlementDate Leave blank, this field is inserted by the ACH operator\n\n\t// OriginatorStatusCode refers to the ODFI initiating the Entry.\n\t// 0 ADV File prepared by an ACH Operator.\n\t// 1 This code identifies the Originator as a depository financial institution.\n\t// 2 This code identifies the Originator as a Federal Government entity or agency.\n\n\t//ODFIIdentification First 8 digits of the originating DFI transit routing number\n\tODFIIdentification string `json:\"ODFIIdentification\"`\n\n\t// BatchNumber is assigned in ascending sequence to each batch by the ODFI\n\t// or its Sending Point in a given file of entries. Since the batch number\n\t// in the Batch Header Record and the Batch Control Record is the same,\n\t// the ascending sequence number should be assigned by batch and not by\n\t// record.\n\n\t// validator is composed for data validation\n\n\t// converters is composed for ACH to golang Converters\n\tmoov_io_ach_converters\n}","type moov_io_ach_converters struct{}"],"Function Declarations":["","",""],"Function Implementations":["func moov_io_ach_populateMap(max int, zero string) map[int]string {\n\tout := make(map[int]string, max)\n\tfor i := 0; i \u003c max; i++ {\n\t\tout[i] = strings.Repeat(zero, i)\n\t}\n\treturn out\n}","func (c *moov_io_ach_converters) stringField(s string, max uint) string {\n\tln := uint(utf8.RuneCountInString(s))\n\tif ln \u003e max {\n\t\treturn s[:max]\n\t}\n\n\t// Pad with preallocated string\n\tm := int(max - ln)\n\tpad, exists := moov_io_ach_stringZeros[m]\n\tif exists {\n\t\treturn pad + s\n\t}\n\t// slow path\n\treturn strings.Repeat(\"0\", m) + s\n}","func (bh *moov_io_ach_BatchHeader) ODFIIdentificationField() string {\n\treturn bh.stringField(bh.ODFIIdentification, 8)\n}"],"Enums":[]}
