{"Includes":["import (\n\t\"strconv\"\n\t\"strings\"\n)"],"Defines":["const ()"],"TypeDefs":[],"Globals":["var (\n\tmoov_io_ach_stringZeros map[int]string = moov_io_ach_populateMap(94, \"0\")\n)"],"Structs":["type moov_io_ach_FileControl struct {\n\t// ID is a client defined string used as a reference to this record.\n\n\t// BatchCount total number of batches (i.e., '5' records) in the file\n\tBatchCount int `json:\"batchCount\"`\n\t// BlockCount total number of records in the file (include all headers and trailer) divided\n\t// by 10 (This number must be evenly divisible by 10. If not, additional records consisting of all 9's are added to the file after the initial '9' record to fill out the block 10.)\n\n\t// EntryAddendaCount is a tally of each Entry Detail Record and each Addenda\n\t// Record processed, within either the batch or file as appropriate.\n\n\t// EntryHash calculated in the same manner as the batch has total but includes total from entire file\n\n\t// TotalDebitEntryDollarAmountInFile contains accumulated Batch debit totals within the file.\n\n\t// TotalCreditEntryDollarAmountInFile contains accumulated Batch credit totals within the file.\n\n\t// validator is composed for data validation\n\n\t// converters is composed for ACH to golang Converters\n\tmoov_io_ach_converters\n}","type moov_io_ach_converters struct{}"],"Function Declarations":["","",""],"Function Implementations":["func moov_io_ach_populateMap(max int, zero string) map[int]string {\n\tout := make(map[int]string, max)\n\tfor i := 0; i \u003c max; i++ {\n\t\tout[i] = strings.Repeat(zero, i)\n\t}\n\treturn out\n}","func (c *moov_io_ach_converters) numericField(n int, max uint) string {\n\ts := strconv.FormatInt(int64(n), 10)\n\tif l := uint(len(s)); l \u003e max {\n\t\treturn s[l-max:]\n\t} else {\n\t\tm := int(max - l)\n\t\tpad, exists := moov_io_ach_stringZeros[m]\n\t\tif exists {\n\t\t\treturn pad + s\n\t\t}\n\t\t// slow path\n\t\treturn strings.Repeat(\"0\", m) + s\n\t}\n}","func (fc *moov_io_ach_FileControl) BatchCountField() string {\n\treturn fc.numericField(fc.BatchCount, 6)\n}"],"Enums":[]}
