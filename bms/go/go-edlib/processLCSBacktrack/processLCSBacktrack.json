{"Includes":[],"Defines":["const ()"],"TypeDefs":[],"Globals":["var ()"],"Structs":[],"Function Declarations":[""],"Function Implementations":["func processLCSBacktrack(str1, str2 string, lcsMatrix [][]int, m, n int) string {\n\t// Convert strings to rune array to handle no-ASCII characters\n\truneStr1 := []rune(str1)\n\truneStr2 := []rune(str2)\n\n\tif m == 0 || n == 0 {\n\t\treturn \"\"\n\t} else if runeStr1[m-1] == runeStr2[n-1] {\n\t\treturn processLCSBacktrack(str1, str2, lcsMatrix, m-1, n-1) + string(runeStr1[m-1])\n\t} else if lcsMatrix[m][n-1] \u003e lcsMatrix[m-1][n] {\n\t\treturn processLCSBacktrack(str1, str2, lcsMatrix, m, n-1)\n\t}\n\n\treturn processLCSBacktrack(str1, str2, lcsMatrix, m-1, n)\n}"],"Enums":[]}
