{"Includes":[],"Defines":["const ()"],"TypeDefs":[],"Globals":["var ()"],"Structs":[],"Function Declarations":["",""],"Function Implementations":["func Max(a int, b int) int {\n\tif b \u003e a {\n\t\treturn b\n\t}\n\treturn a\n}","func lcsProcess(runeStr1, runeStr2 []rune) [][]int {\n\t// 2D Array that will contain str1 and str2 LCS\n\tlcsMatrix := make([][]int, len(runeStr1)+1)\n\tfor i := 0; i \u003c= len(runeStr1); i++ {\n\t\tlcsMatrix[i] = make([]int, len(runeStr2)+1)\n\t\tfor j := 0; j \u003c= len(runeStr2); j++ {\n\t\t\tlcsMatrix[i][j] = 0\n\t\t}\n\t}\n\n\tfor i := 1; i \u003c= len(runeStr1); i++ {\n\t\tfor j := 1; j \u003c= len(runeStr2); j++ {\n\t\t\tif runeStr1[i-1] == runeStr2[j-1] {\n\t\t\t\tlcsMatrix[i][j] = lcsMatrix[i-1][j-1] + 1\n\t\t\t} else {\n\t\t\t\tlcsMatrix[i][j] = Max(lcsMatrix[i][j-1], lcsMatrix[i-1][j])\n\t\t\t}\n\t\t}\n\t}\n\n\treturn lcsMatrix\n}"],"Enums":[]}
