{"Includes":["import (\n\t\"math\"\n)"],"Defines":[],"TypeDefs":["type geo_s1_ChordAngle float64"],"Globals":[],"Structs":[],"Function Declarations":["","","",""],"Function Implementations":["func (c geo_s1_ChordAngle) Sin2() float64 {\n\t// Let a be the (non-squared) chord length, and let A be the corresponding\n\t// half-angle (a = 2*sin(A)). The formula below can be derived from:\n\t//   sin(2*A) = 2 * sin(A) * cos(A)\n\t//   cos^2(A) = 1 - sin^2(A)\n\t// This is much faster than converting to an angle and computing its sine.\n\treturn float64(c * (1 - 0.25*c))\n}","func (c geo_s1_ChordAngle) Sin() float64 {\n\treturn math.Sqrt(c.Sin2())\n}","func (c geo_s1_ChordAngle) Cos() float64 {\n\t// cos(2*A) = cos^2(A) - sin^2(A) = 1 - 2*sin^2(A)\n\treturn float64(1 - 0.5*c)\n}","func (c geo_s1_ChordAngle) Tan() float64 {\n\treturn c.Sin() / c.Cos()\n}"],"Enums":[]}
