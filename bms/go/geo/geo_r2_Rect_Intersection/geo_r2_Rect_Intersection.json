{"Includes":["import (\n\t\"math\"\n)"],"Defines":[],"TypeDefs":[],"Globals":[],"Structs":["type geo_r2_Rect struct {\n\tX, Y geo_r1_Interval\n}","type geo_r1_Interval struct {\n\tLo, Hi float64\n}"],"Function Declarations":["","","","",""],"Function Implementations":["func geo_r1_EmptyInterval() geo_r1_Interval { return geo_r1_Interval{1, 0} }","func geo_r2_EmptyRect() geo_r2_Rect {\n\treturn geo_r2_Rect{geo_r1_EmptyInterval(), geo_r1_EmptyInterval()}\n}","func (i geo_r1_Interval) Intersection(j geo_r1_Interval) geo_r1_Interval {\n\t// Empty intervals do not need to be special-cased.\n\treturn geo_r1_Interval{\n\t\tLo: math.Max(i.Lo, j.Lo),\n\t\tHi: math.Min(i.Hi, j.Hi),\n\t}\n}","func (i geo_r1_Interval) IsEmpty() bool { return i.Lo \u003e i.Hi }","func (r geo_r2_Rect) Intersection(other geo_r2_Rect) geo_r2_Rect {\n\txx := r.X.Intersection(other.X)\n\tyy := r.Y.Intersection(other.Y)\n\tif xx.IsEmpty() || yy.IsEmpty() {\n\t\treturn geo_r2_EmptyRect()\n\t}\n\n\treturn geo_r2_Rect{xx, yy}\n}"],"Enums":[]}
