{"Includes":["import (\n\t\"bufio\"\n\t\"encoding/binary\"\n\t\"io\"\n)"],"Defines":[],"TypeDefs":["type geo_s2_CellID uint64","type geo_s2_byteReader interface {\n\tio.Reader\n\tio.ByteReader\n}"],"Globals":[],"Structs":["type geo_s2_decoder struct {\n\tr   geo_s2_byteReader // the real reader passed to Decode\n\terr error\n}"],"Function Declarations":["","","",""],"Function Implementations":["func geo_s2_asByteReader(r io.Reader) geo_s2_byteReader {\n\tif br, ok := r.(geo_s2_byteReader); ok {\n\t\treturn br\n\t}\n\treturn bufio.NewReader(r)\n}","func (d *geo_s2_decoder) readUint64() (x uint64) {\n\tif d.err != nil {\n\t\treturn\n\t}\n\td.err = binary.Read(d.r, binary.LittleEndian, \u0026x)\n\treturn\n}","func (ci *geo_s2_CellID) decode(d *geo_s2_decoder) {\n\t*ci = geo_s2_CellID(d.readUint64())\n}","func (ci *geo_s2_CellID) Decode(r io.Reader) error {\n\td := \u0026geo_s2_decoder{r: geo_s2_asByteReader(r)}\n\tci.decode(d)\n\treturn d.err\n}"],"Enums":[]}
