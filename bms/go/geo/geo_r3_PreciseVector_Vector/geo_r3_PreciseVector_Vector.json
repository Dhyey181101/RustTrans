{"Includes":["import (\n\t\"math\"\n\t\"math/big\"\n)"],"Defines":[],"TypeDefs":[],"Globals":[],"Structs":["type geo_r3_PreciseVector struct {\n\tX, Y, Z *big.Float\n}","type geo_r3_Vector struct {\n\tX, Y, Z float64\n}"],"Function Declarations":["","","","",""],"Function Implementations":["func (v geo_r3_Vector) Dot(ov geo_r3_Vector) float64 {\n\treturn float64(v.X*ov.X) + float64(v.Y*ov.Y) + float64(v.Z*ov.Z)\n}","func (v geo_r3_Vector) Norm2() float64 { return v.Dot(v) }","func (v geo_r3_Vector) Mul(m float64) geo_r3_Vector { return geo_r3_Vector{m * v.X, m * v.Y, m * v.Z} }","func (v geo_r3_Vector) Normalize() geo_r3_Vector {\n\tn2 := v.Norm2()\n\tif n2 == 0 {\n\t\treturn geo_r3_Vector{0, 0, 0}\n\t}\n\treturn v.Mul(1 / math.Sqrt(n2))\n}","func (v geo_r3_PreciseVector) Vector() geo_r3_Vector {\n\t// The accuracy flag is ignored on these conversions back to float64.\n\tx, _ := v.X.Float64()\n\ty, _ := v.Y.Float64()\n\tz, _ := v.Z.Float64()\n\treturn geo_r3_Vector{x, y, z}.Normalize()\n}"],"Enums":[]}
