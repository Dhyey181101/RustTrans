{"Includes":["import \"math/rand\""],"Defines":["const ()"],"TypeDefs":["type Vector []int64"],"Globals":["var ()","var (\n\t\tdmin, dmax int64\n\t)","var i int64"],"Structs":["type Matrix struct {\n\tN int64\n\tA []int64\n}"],"Function Declarations":["","","","","","",""],"Function Implementations":["func (m Matrix) Get(i int64, j int64) int64 {\n\treturn m.A[i*m.N+j]\n}","func (v Vector) Len() int64 {\n\treturn int64(len(v))\n}","func (p Vector) Swap(i int64, j int64) {\n\tx := p[i]\n\tp[i] = p[j]\n\tp[j] = x\n}","func max(a, b int64) int64 {\n\tif a \u003e b {\n\t\treturn a\n\t}\n\treturn b\n}","func delta(a *Matrix, b *Matrix, p Vector, r int64, s int64) (d int64) {\n\tvar i int64\n\td = int64((a.Get(r, r)-a.Get(s, s))*(b.Get(p[s], p[s])-b.Get(p[r], p[r])) +\n\t\t(a.Get(r, s)-a.Get(s, r))*(b.Get(p[s], p[r])-b.Get(p[r], p[s])))\n\tfor i = 0; i \u003c p.Len(); i++ {\n\t\tif i != r \u0026\u0026 i != s {\n\t\t\td += (a.Get(i, r)-a.Get(i, s))*(b.Get(p[i], p[s])-b.Get(p[i], p[r])) +\n\t\t\t\t(a.Get(r, i)-a.Get(s, i))*(b.Get(p[s], p[i])-b.Get(p[r], p[i]))\n\t\t}\n\t}\n\treturn d\n}","func min(a, b int64) int64 {\n\tif a \u003c b {\n\t\treturn a\n\t}\n\treturn b\n}","func initQAP(a *Matrix, b *Matrix, w Vector, c int64) (int64, int64, int64) {\n\tvar (\n\t\tdmin, dmax int64\n\t)\n\tn := w.Len()\n\tfor i := 0; i \u003c 10000; i++ {\n\t\tr := rand.Int63n(n)\n\t\ts := rand.Int63n(n - 1)\n\t\tif s \u003e= r {\n\t\t\ts = s + 1\n\t\t}\n\t\td := delta(a, b, w, r, s)\n\t\tc += d\n\t\tdmin = min(dmin, d)\n\t\tdmax = max(dmax, d)\n\t\tw.Swap(r, s)\n\t}\n\treturn c, dmin, dmax\n}"],"Enums":[]}
