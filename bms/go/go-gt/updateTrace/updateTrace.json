{"Includes":[],"Defines":["const ()"],"TypeDefs":["type Vector []int64"],"Globals":["var ()","var i int64","var i, j int64"],"Structs":["type Matrix struct {\n\tN int64\n\tA []int64\n}"],"Function Declarations":["","","",""],"Function Implementations":["func (m Matrix) Set(i int64, j int64, v int64) {\n\tm.A[i*m.N+j] = v\n}","func initTrace(n, inc int64, trace *Matrix) {\n\tvar i, j int64\n\tfor i = 0; i \u003c n; i++ {\n\t\tfor j = 0; j \u003c n; j++ {\n\t\t\ttrace.Set(i, j, inc)\n\t\t}\n\t}\n}","func (m Matrix) Get(i int64, j int64) int64 {\n\treturn m.A[i*m.N+j]\n}","func updateTrace(n int64, p, best_p Vector, inc *int64, r int64, trace *Matrix) {\n\tvar i int64\n\tfor i = 0; i \u003c n \u0026\u0026 p[i] == best_p[i]; i++ { // skip\n\t}\n\tif i == n {\n\t\t(*inc)++\n\t\tinitTrace(n, *inc, trace)\n\t} else {\n\t\tfor i = 0; i \u003c n; i++ {\n\t\t\ttrace.Set(i, p[i], trace.Get(i, p[i])+*inc)\n\t\t\ttrace.Set(i, best_p[i], trace.Get(i, best_p[i])+r)\n\t\t}\n\t}\n}"],"Enums":[]}
