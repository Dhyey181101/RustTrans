{"Includes":["import (\n\t\"math\"\n)"],"Defines":["const ()"],"TypeDefs":[],"Globals":["var ()","var i int64"],"Structs":["type Heap struct {\n\tN int64\n\tI []int64\n\tA []int64\n\tW []int64\n}"],"Function Declarations":[""],"Function Implementations":["func newHeap(n int64) (h Heap) {\n\th.N = n\n\th.I = make([]int64, n)\n\th.A = make([]int64, n)\n\th.W = make([]int64, n)\n\tvar i int64\n\tfor i = 0; i \u003c n; i++ {\n\t\th.I[i] = i\n\t\th.A[i] = i\n\t\th.W[i] = math.MaxInt64\n\t}\n\treturn h\n}"],"Enums":[]}
