{"Includes":[],"Defines":["const ()"],"TypeDefs":[],"Globals":["var ()","var i, j, k int64"],"Structs":["type Matrix struct {\n\tN int64\n\tA []int64\n}"],"Function Declarations":["","",""],"Function Implementations":["func (m Matrix) Get(i int64, j int64) int64 {\n\treturn m.A[i*m.N+j]\n}","func (m Matrix) Set(i int64, j int64, v int64) {\n\tm.A[i*m.N+j] = v\n}","func (G *Matrix) TransitiveClosure(N *Matrix) {\n\tvar i, j, k int64\n\tfor i = 0; i \u003c G.N; i++ {\n\t\tfor j = 0; j \u003c G.N; j++ {\n\t\t\tfor k = 0; k \u003c G.N; k++ {\n\t\t\t\tif G.Get(i, k) \u003e 0 \u0026\u0026 G.Get(k, j) \u003e 0 {\n\t\t\t\t\tif G.Get(i, j) == 0 || G.Get(i, k)+G.Get(k, j) \u003c G.Get(i, j) {\n\t\t\t\t\t\tG.Set(i, j, G.Get(i, k)+G.Get(k, j))\n\t\t\t\t\t\tif N != nil {\n\t\t\t\t\t\t\tN.Set(i, j, k+1)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"],"Enums":[]}
